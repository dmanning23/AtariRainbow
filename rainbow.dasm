; This program paints a scrolling rainbow down the screen.

;Preamble
	processor 6502 ;Declare to the assmbler that we are writing code for 6502
        include "vcs.h"
        include "macro.h"
        include "xmacro.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Variables segment

        seg.u Variables

BGColor	equ $81 ;Variable at memory address $81 to hold a background color that we will use later

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Code segment

	seg Code
        org $f000 ;start code at $f000

Start
	CLEAN_START ;Macro to initialize several flags and registers, safely clears memory and TIA

NextFrame

	lda #2 ;same as binary #%00000010
        sta VBLANK ;turn on VBLANK
        sta VSYNC ;turn on VSYNC
        
; 1 + 3 lines of VSYNC
	sta WSYNC ;first scanline
        sta WSYNC ;second scanline
        sta WSYNC ;third scanline
        lda #0
        sta VSYNC ;turn off vsync

; 37 lines of underscan. 
	ldx #37 ;Use the x register to count down the number of scanlines (37)
LVBlank
	sta WSYNC ;wait for the next scanline
        dex ;decremnt x
        bne LVBlank ;lopp while x != 0
        
; disable VBLANK and release the TIA to generaqte some color

	lda #0
        sta VBLANK

; 192 lines of frame

	ldx #192	;use the x register to count 192 scanlines
        ldy BGColor	;load the background color out or ram
LVScan
	sty COLUBK ;set the background color
        sta WSYNC ;wait for the next scanline
        iny ;increment the background color
        dex ;decrement x
        bne LVScan ;loop while X != 0

; 30 lines of overscan

	lda #2
        sta VBLANK ;turn on vblank again
        ldx #30
LVOver	
	sta WSYNC ;wait for next scanline
        dex ;decrement x
        bne LVOver ;loop while x !=0 

; total = 262 lines, go to next frame

	dec BGColor ;decrement the BGColor variable so that the colors animate down the screen
        jmp NextFrame

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Epilogue

	org $fffc
        .word Start ;reset vector
        .word Start ;BRK vector
